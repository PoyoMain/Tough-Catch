//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""GameplayControls"",
            ""id"": ""781e2174-83b7-47f5-90c3-ee908b09ea9a"",
            ""actions"": [
                {
                    ""name"": ""Move Scanner"",
                    ""type"": ""Value"",
                    ""id"": ""c606d4d5-83ff-4988-a7b2-1c2e84b72e8e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hook Ring Select"",
                    ""type"": ""Button"",
                    ""id"": ""73bc6d02-6708-4f84-8c19-adacdcda3e9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Laser Shoot Left"",
                    ""type"": ""Button"",
                    ""id"": ""0ed124a2-31e0-4052-a5a1-d2a21dc47035"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Laser Shoot Right"",
                    ""type"": ""Button"",
                    ""id"": ""95d4f76c-286c-41fa-90b8-428c746cfcb1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fishing Rod Control"",
                    ""type"": ""Value"",
                    ""id"": ""5e85811b-dd2b-4413-b45e-f94237065a9f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Stun Panel Buttons"",
                    ""type"": ""Value"",
                    ""id"": ""15e6de39-b820-4051-a984-2ce9cdde0a0a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reeling"",
                    ""type"": ""Value"",
                    ""id"": ""bf5631f0-923d-4310-8734-cd3d0fd7959d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""a987542c-b023-457c-9d31-dbcbd90dac25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""529f76c0-4f35-412e-b93a-42abddcca4f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0f792386-f630-488f-b6e6-1dee4c433739"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2694f03-8407-4b14-a2bf-98f4004d09d5"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""e9a61a73-5e84-447c-9e8d-93b5918e07d0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e8f8e5db-d13b-4cf8-8530-ed0455bc298f"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f46dafbe-2049-4977-b548-d9cb9a0b341e"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3812f142-41b1-4048-9d4a-6f760d22a493"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a28640b0-82cd-43dc-a686-0ffe57417485"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move Scanner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""903db1f5-22ab-4100-a455-f61850019769"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Hook Ring Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90c245ad-289d-48e4-a4ee-acfcf5f488ff"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Laser Shoot Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2b09273-db5b-4f4b-a803-57826d3a2160"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Laser Shoot Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f3d3cd0-f181-41b8-9b07-64e1e6a4f24d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Laser Shoot Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""204051ce-7732-4b8c-884d-949ec19e540a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Laser Shoot Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d8fec50d-30c5-43a6-999c-3a323e4c9291"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fishing Rod Control"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c46c464f-92ee-4df3-9000-d63227716081"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fishing Rod Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""22a0fabe-b3eb-4719-a8f7-c198b683c39e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fishing Rod Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePad"",
                    ""id"": ""440b14d3-3540-461f-817a-e9327c1f7f72"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stun Panel Buttons"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6e588e35-825a-4c8d-8517-7c4bef475fae"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stun Panel Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""088580a6-c671-4ca2-8037-1e24f73246cc"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stun Panel Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0a6d62c8-5ce1-4bb7-81af-5259ea3cb815"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stun Panel Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""60ca1e05-bb0f-4c12-9c13-97b0ff3880db"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stun Panel Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePad"",
                    ""id"": ""bc9ae07c-6c96-4d0b-8aef-2b80159612b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reeling"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dcd78a22-b0b4-4980-adb2-c0f27295580b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ad30c34e-07e5-4a44-aa84-f40f58096d90"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e3c27ed-139f-4445-a4d7-86f89e5f316d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""61017502-f33f-4d60-8909-c88db3199136"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reeling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5fdabcf3-c79b-4ab7-abad-943916ecbc5c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5acf00a8-670f-4f05-82f0-990b540efc9a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""341a7304-6350-45ab-8983-0682ea76dc43"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""026c5193-2a2d-4796-93e1-10defc041d4b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GameplayControls
        m_GameplayControls = asset.FindActionMap("GameplayControls", throwIfNotFound: true);
        m_GameplayControls_MoveScanner = m_GameplayControls.FindAction("Move Scanner", throwIfNotFound: true);
        m_GameplayControls_HookRingSelect = m_GameplayControls.FindAction("Hook Ring Select", throwIfNotFound: true);
        m_GameplayControls_LaserShootLeft = m_GameplayControls.FindAction("Laser Shoot Left", throwIfNotFound: true);
        m_GameplayControls_LaserShootRight = m_GameplayControls.FindAction("Laser Shoot Right", throwIfNotFound: true);
        m_GameplayControls_FishingRodControl = m_GameplayControls.FindAction("Fishing Rod Control", throwIfNotFound: true);
        m_GameplayControls_StunPanelButtons = m_GameplayControls.FindAction("Stun Panel Buttons", throwIfNotFound: true);
        m_GameplayControls_Reeling = m_GameplayControls.FindAction("Reeling", throwIfNotFound: true);
        m_GameplayControls_Confirm = m_GameplayControls.FindAction("Confirm", throwIfNotFound: true);
        m_GameplayControls_Pause = m_GameplayControls.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameplayControls
    private readonly InputActionMap m_GameplayControls;
    private List<IGameplayControlsActions> m_GameplayControlsActionsCallbackInterfaces = new List<IGameplayControlsActions>();
    private readonly InputAction m_GameplayControls_MoveScanner;
    private readonly InputAction m_GameplayControls_HookRingSelect;
    private readonly InputAction m_GameplayControls_LaserShootLeft;
    private readonly InputAction m_GameplayControls_LaserShootRight;
    private readonly InputAction m_GameplayControls_FishingRodControl;
    private readonly InputAction m_GameplayControls_StunPanelButtons;
    private readonly InputAction m_GameplayControls_Reeling;
    private readonly InputAction m_GameplayControls_Confirm;
    private readonly InputAction m_GameplayControls_Pause;
    public struct GameplayControlsActions
    {
        private @PlayerControls m_Wrapper;
        public GameplayControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveScanner => m_Wrapper.m_GameplayControls_MoveScanner;
        public InputAction @HookRingSelect => m_Wrapper.m_GameplayControls_HookRingSelect;
        public InputAction @LaserShootLeft => m_Wrapper.m_GameplayControls_LaserShootLeft;
        public InputAction @LaserShootRight => m_Wrapper.m_GameplayControls_LaserShootRight;
        public InputAction @FishingRodControl => m_Wrapper.m_GameplayControls_FishingRodControl;
        public InputAction @StunPanelButtons => m_Wrapper.m_GameplayControls_StunPanelButtons;
        public InputAction @Reeling => m_Wrapper.m_GameplayControls_Reeling;
        public InputAction @Confirm => m_Wrapper.m_GameplayControls_Confirm;
        public InputAction @Pause => m_Wrapper.m_GameplayControls_Pause;
        public InputActionMap Get() { return m_Wrapper.m_GameplayControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayControlsActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayControlsActionsCallbackInterfaces.Add(instance);
            @MoveScanner.started += instance.OnMoveScanner;
            @MoveScanner.performed += instance.OnMoveScanner;
            @MoveScanner.canceled += instance.OnMoveScanner;
            @HookRingSelect.started += instance.OnHookRingSelect;
            @HookRingSelect.performed += instance.OnHookRingSelect;
            @HookRingSelect.canceled += instance.OnHookRingSelect;
            @LaserShootLeft.started += instance.OnLaserShootLeft;
            @LaserShootLeft.performed += instance.OnLaserShootLeft;
            @LaserShootLeft.canceled += instance.OnLaserShootLeft;
            @LaserShootRight.started += instance.OnLaserShootRight;
            @LaserShootRight.performed += instance.OnLaserShootRight;
            @LaserShootRight.canceled += instance.OnLaserShootRight;
            @FishingRodControl.started += instance.OnFishingRodControl;
            @FishingRodControl.performed += instance.OnFishingRodControl;
            @FishingRodControl.canceled += instance.OnFishingRodControl;
            @StunPanelButtons.started += instance.OnStunPanelButtons;
            @StunPanelButtons.performed += instance.OnStunPanelButtons;
            @StunPanelButtons.canceled += instance.OnStunPanelButtons;
            @Reeling.started += instance.OnReeling;
            @Reeling.performed += instance.OnReeling;
            @Reeling.canceled += instance.OnReeling;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IGameplayControlsActions instance)
        {
            @MoveScanner.started -= instance.OnMoveScanner;
            @MoveScanner.performed -= instance.OnMoveScanner;
            @MoveScanner.canceled -= instance.OnMoveScanner;
            @HookRingSelect.started -= instance.OnHookRingSelect;
            @HookRingSelect.performed -= instance.OnHookRingSelect;
            @HookRingSelect.canceled -= instance.OnHookRingSelect;
            @LaserShootLeft.started -= instance.OnLaserShootLeft;
            @LaserShootLeft.performed -= instance.OnLaserShootLeft;
            @LaserShootLeft.canceled -= instance.OnLaserShootLeft;
            @LaserShootRight.started -= instance.OnLaserShootRight;
            @LaserShootRight.performed -= instance.OnLaserShootRight;
            @LaserShootRight.canceled -= instance.OnLaserShootRight;
            @FishingRodControl.started -= instance.OnFishingRodControl;
            @FishingRodControl.performed -= instance.OnFishingRodControl;
            @FishingRodControl.canceled -= instance.OnFishingRodControl;
            @StunPanelButtons.started -= instance.OnStunPanelButtons;
            @StunPanelButtons.performed -= instance.OnStunPanelButtons;
            @StunPanelButtons.canceled -= instance.OnStunPanelButtons;
            @Reeling.started -= instance.OnReeling;
            @Reeling.performed -= instance.OnReeling;
            @Reeling.canceled -= instance.OnReeling;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IGameplayControlsActions instance)
        {
            if (m_Wrapper.m_GameplayControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayControlsActions @GameplayControls => new GameplayControlsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGameplayControlsActions
    {
        void OnMoveScanner(InputAction.CallbackContext context);
        void OnHookRingSelect(InputAction.CallbackContext context);
        void OnLaserShootLeft(InputAction.CallbackContext context);
        void OnLaserShootRight(InputAction.CallbackContext context);
        void OnFishingRodControl(InputAction.CallbackContext context);
        void OnStunPanelButtons(InputAction.CallbackContext context);
        void OnReeling(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
